version: 2
jobs:
  delete-old-version:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
      - run:
          name: Delete old version
          working_directory: .circleci
          command: ./delete-old-version.sh

  test-api:
    working_directory: /go/src/github.com/desbo/ladder
    docker:
      - image: google/cloud-sdk
    environment: 
      GOPATH: /go
    steps:
      - checkout
      - run:
          name: Install Go
          command: |
            apt-get install -y wget tar
            wget https://dl.google.com/go/go1.9.3.linux-amd64.tar.gz
            tar -C /usr/local -xzf go1.9.3.linux-amd64.tar.gz
      - run:
          name: Install Go depependencies
          working_directory: api
          command: /usr/local/go/bin/go get -t -d -v ./...
      - run: mkdir -p /tmp/test-results
      - run: /usr/local/go/bin/go get github.com/jstemmer/go-junit-report
      - run:
          name: Run Go tests
          working_directory: api
          command: |
            trap "/go/bin/go-junit-report < /tmp/test-results/go-test.out > /tmp/test-results/go-test-report.xml" EXIT
            /usr/local/go/bin/go test -v . | tee /tmp/test-results/go-test.out
      - store_test_results:
          path: /tmp/test-results

  deploy-api:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
      - run:
          name: Install Go
          command: |
            apt-get install -y wget tar
            wget https://dl.google.com/go/go1.9.3.linux-amd64.tar.gz
            tar -C /usr/local -xzf go1.9.3.linux-amd64.tar.gz
      - run:
          name: Install Go depependencies
          working_directory: api
          command: /usr/local/go/bin/go get -t -d -v ./...
      - run:
          name: Add gcloud auth
          working_directory: .circleci
          command: ./gcloud-auth.sh
      - run:
          name: Install make
          command: apt-get install -y make 
      - run:
          name: Deploy to App Engine
          command: make deploy-api
    
  deploy-static:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-{{ checksum "static/yarn.lock" }}
      - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
      - run:
          name: Install node/yarn
          working_directory: .circleci
          command: ./static-build-deps.sh
      - run:
          name: Install JS dependencies
          working_directory: static
          command: yarn install
      - save_cache:
          key: yarn-{{ checksum "static/yarn.lock" }}
          paths: static/node_modules
      - run:
          name: Add gcloud auth
          working_directory: .circleci
          command: ./gcloud-auth.sh
      - run:
          name: Deploy to App Engine
          command: make deploy-static

workflows:
  version: 2
  test-deploy:
    jobs:
      - delete-old-version:
          filters:
              branches:
                only: master
      - test-api
      - deploy-api:
          requires:
            - delete-old-version
            - test-api
          filters:
            branches:
              only: master
      - deploy-static:
          requires:
            - delete-old-version
          filters:
            branches:
              only: master